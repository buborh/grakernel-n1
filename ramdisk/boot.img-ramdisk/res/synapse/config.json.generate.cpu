#!/sbin/busybox sh

MPS='0:"Disabled", 1:"1", 2:"2"'

cat << CTAG
{
    name:CPU,
    elements:[
	{ STitleBar:{
		title:"Temperature"
	}},
	{ SLiveLabel:{
		refresh:500,
		action:"live batterytemp"
	}},
	{ STitleBar:{
		title:"CPU Frequency scaling"
	}},
	{ SLiveLabel:{
		title:"CPU Frequency",
		refresh:500,
		action:"live freq"
	}},
	{ SSeekBar:{
       		title:"CPU Max Frequency",
		description:"Set the maximum freqency the CPU scales up to.",
		default:`cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq`,
		action:"generic /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq",
		values:{
`
			while read FREQ TIME; do
				LABEL=$(expr $FREQ / 1000)
				echo "$FREQ:\"${LABEL}MHz\", "
			done < /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state
`
		}
	}},
	{ SSeekBar:{
       		title:"CPU Min Frequency",
		description:"Set the minimum freqency the CPU scales down to.",
		default:`cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq`,
		action:"generic /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq",
		values:{
`
			while read FREQ TIME; do
				LABEL=$(expr $FREQ / 1000)
				echo "$FREQ:\"${LABEL}MHz\", "
			done < /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state
`
		}
	}},
	{ SSeekBar:{
       		title:"CPU Max Screen Off Frequency",
		description:"Set the maximum freqency the CPU scales down to when the screen is off.",
		default:`cat /sys/devices/system/cpu/cpu0/cpufreq/screen_off_max_freq`,
		action:"generic /sys/devices/system/cpu/cpu0/cpufreq/screen_off_max_freq",
		values:{
`
			while read FREQ TIME; do
				LABEL=$(expr $FREQ / 1000)
				echo "$FREQ:\"${LABEL}MHz\", "
			done < /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state
`
		}
	}},
	{ SPane:{
		title:"CPU Governor",
		description:"The CPU governor determines how the CPU behaves in response to changes in workload. Changing the governor will impact how the CPU scales through the frequency steps available to you CPU."
	}},
	{ SOptionList:{
                default:`cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor`,
                action:"generic /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor",
                values:[
`
                        for GOVERNOR in \`cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors\` ; do
				echo "\"$GOVERNOR\","
			done
`
                ]
        }},
	{ SPane:{
                title:"Multicore Power Saving",
                description:"Try to group tasks into the least cores possible. The higher it is, the more the aggression will be."
        }},
	{ SSeekBar:{
                default:`cat /sys/devices/system/cpu/sched_mc_power_savings`,
                action:"generic /sys/devices/system/cpu/sched_mc_power_savings",
		values:{
`
			echo $MPS
`
		}
        }},
	{ SPane:{
                title:"CPU Voltage Control",
                description:"Decreasing voltage will lower power consumption of the CPU. Increasing it on overclocked frequencies improves stability. Too low voltage may cause instabilities and freezes."
        }},
`
while read FREQ UVOLT UNIT; do
	echo '{ SSeekBar:{
	default:'$UVOLT',
	title:"'${FREQ//mhz\:/}' MHz",
	action:"cpuvolt '${FREQ}'",
	unit:"'${UNIT}'", min:750, max:1125, step:5 }},'
done < /sys/devices/system/cpu/cpu0/cpufreq/UV_mV_table
`
	{ SPane:{
                title:"IntelliPlug"
        }},
	{ SCheckBox:{
		description:"IntelliPlug hotplugs/unplugs CPU cores based on load demand of the system.",
                label:"Enable IntelliPlug",
                default:`cat /sys/module/intelli_plug/parameters/intelli_plug_active`,
                action:"generic /sys/module/intelli_plug/parameters/intelli_plug_active"
        }},
    ]
}
CTAG
